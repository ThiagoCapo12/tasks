{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\first_project\\\\tasks\\\\src\\\\components\\\\RevealAnswer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RevealAnswer() {\n  _s();\n\n  const [isAnswerVisible, setIsAnswerVisible] = useState(false);\n\n  const handleRevealAnswer = () => {\n    setIsAnswerVisible(!isAnswerVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The answer is:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), isAnswerVisible && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"42\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleRevealAnswer,\n      children: \"Reveal Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RevealAnswer, \"BC3HKZM9DXO1F04PW7J4RJoUqJ8=\");\n\n_c = RevealAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevealAnswer\");","map":{"version":3,"sources":["C:/Users/thiag/first_project/tasks/src/components/RevealAnswer.tsx"],"names":["React","useState","Button","RevealAnswer","isAnswerVisible","setIsAnswerVisible","handleRevealAnswer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,OAAO,SAASC,YAAT,GAAqC;AAAA;;AACxC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMK,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKA,eAAe,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHxB,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAfeH,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport function RevealAnswer(): JSX.Element {\r\n    const [isAnswerVisible, setIsAnswerVisible] = useState(false);\r\n\r\n    const handleRevealAnswer = () => {\r\n        setIsAnswerVisible(!isAnswerVisible);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quiz Application</h1>\r\n            <p>The answer is:</p>\r\n            {isAnswerVisible && <p>42</p>}\r\n            <Button onClick={handleRevealAnswer}>Reveal Answer</Button>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}