{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\first_project\\\\tasks\\\\src\\\\components\\\\StartAttempt.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function StartAttempt() {\n  _s();\n\n  const [attempts, setAttempts] = useState(4);\n  const [quizInProgress, setQuizInProgress] = useState(false);\n\n  const handleStartQuiz = () => {\n    if (attempts > 0) {\n      setQuizInProgress(true);\n      setAttempts(attempts - 1);\n    }\n  };\n\n  const handleStopQuiz = () => {\n    setQuizInProgress(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Start Attempt\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n}\n\n_s(StartAttempt, \"u3c1PfQSqEdhKRHY+Khx9FwHv48=\");\n\n_c = StartAttempt;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartAttempt\");","map":{"version":3,"sources":["C:/Users/thiag/first_project/tasks/src/components/StartAttempt.tsx"],"names":["React","useState","StartAttempt","attempts","setAttempts","quizInProgress","setQuizInProgress","handleStartQuiz","handleStopQuiz"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,OAAO,SAASC,YAAT,GAAqC;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAS,CAAT,CAAxC;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAU,KAAV,CAApD;;AACA,QAAMM,eAAe,GAAG,MAAM;AAC1B,QAAIJ,QAAQ,GAAG,CAAf,EAAkB;AACdG,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,MAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACH;AACJ,GALD;;AAMA,QAAMK,cAAc,GAAG,MAAM;AACzBF,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAGA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAbeJ,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport function StartAttempt(): JSX.Element {\r\n    const [attempts, setAttempts] = useState<number>(4);\r\n    const [quizInProgress, setQuizInProgress] = useState<boolean>(false);\r\n    const handleStartQuiz = () => {\r\n        if (attempts > 0) {\r\n            setQuizInProgress(true);\r\n            setAttempts(attempts - 1);\r\n        }\r\n    };\r\n    const handleStopQuiz = () => {\r\n        setQuizInProgress(false);\r\n    };\r\n    return <div>Start Attempt</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}