{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\first_project\\\\tasks\\\\src\\\\form-components\\\\MultipleChoiceQuestion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MultipleChoiceQuestion(_ref) {\n  _s();\n\n  let {\n    options,\n    expectedAnswer\n  } = _ref;\n  const [selectedOption, setSelectedoption] = useState(options[0]);\n  const isCorrect = selectedOption === expectedAnswer;\n\n  const handleOptionChange = event => {\n    setSelectedoption(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Multiple Choice Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: handleOptionChange,\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isCorrect ? \"✔️\" : \"❌\", isCorrect ? \"Correct\" : \"Incorrect\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MultipleChoiceQuestion, \"KGksHcrXR2l/s8vE5/v/hTsYz0A=\");\n\n_c = MultipleChoiceQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleChoiceQuestion\");","map":{"version":3,"sources":["C:/Users/thiag/first_project/tasks/src/form-components/MultipleChoiceQuestion.tsx"],"names":["React","useState","MultipleChoiceQuestion","options","expectedAnswer","selectedOption","setSelectedoption","isCorrect","handleOptionChange","event","target","value","map","option","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,SAASC,sBAAT,OAMS;AAAA;;AAAA,MANuB;AACnCC,IAAAA,OADmC;AAEnCC,IAAAA;AAFmC,GAMvB;AACZ,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAASE,OAAO,CAAC,CAAD,CAAhB,CAApD;AACA,QAAMI,SAAS,GAAGF,cAAc,KAAKD,cAArC;;AACA,QAAMI,kBAAkB,GACpBC,KADuB,IAEtB;AACDH,IAAAA,iBAAiB,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACH,GAJD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,KAAK,EAAEN,cAAf;AAA+B,MAAA,QAAQ,EAAEG,kBAAzC;AAAA,gBACKL,OAAO,CAACS,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACT;AAAoB,QAAA,KAAK,EAAED,MAA3B;AAAA,kBACKA;AADL,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAA,iBACKP,SAAS,GAAG,IAAH,GAAU,GADxB,EAEKA,SAAS,GAAG,SAAH,GAAe,WAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA9BeL,sB;;KAAAA,sB","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport function MultipleChoiceQuestion({\r\n    options,\r\n    expectedAnswer\r\n}: {\r\n    options: string[];\r\n    expectedAnswer: string;\r\n}): JSX.Element {\r\n    const [selectedOption, setSelectedoption] = useState<string>(options[0]);\r\n    const isCorrect = selectedOption === expectedAnswer;\r\n    const handleOptionChange = (\r\n        event: React.ChangeEvent<HTMLSelectElement>\r\n    ) => {\r\n        setSelectedoption(event.target.value);\r\n    };\r\n    return (\r\n        <div>\r\n            <h3>Multiple Choice Question</h3>\r\n            <select value={selectedOption} onChange={handleOptionChange}>\r\n                {options.map((option, index) => (\r\n                    <option key={index} value={option}>\r\n                        {option}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <div>\r\n                {isCorrect ? \"✔️\" : \"❌\"}\r\n                {isCorrect ? \"Correct\" : \"Incorrect\"}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}