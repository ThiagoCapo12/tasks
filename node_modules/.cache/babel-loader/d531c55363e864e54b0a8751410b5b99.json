{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\first_project\\\\tasks\\\\src\\\\form-components\\\\GiveAttempts.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GiveAttempts() {\n  _s();\n\n  const [attemptsLeft, setAttemptsLeft] = useState(3);\n  const [requestedAttempts, setRequestedAttempts] = useState(\"\");\n\n  const handleUseAttempt = () => {\n    if (attemptsLeft > 0) {\n      setAttemptsLeft(attemptsLeft - 1);\n    }\n  };\n\n  const handleGainAttempts = () => {\n    const parsedAttempts = parseInt(requestedAttempts);\n\n    if (!isNaN(parsedAttempts) && parsedAttempts > 0) {\n      setAttemptsLeft(attemptsLeft + parsedAttempts);\n      setRequestedAttempts(\"\");\n    }\n  };\n\n  const handleChange = event => {\n    setRequestedAttempts(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Give Attempts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Attempts Left: \", attemptsLeft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: requestedAttempts,\n      onChange: handleChange,\n      placeholder: \"Enter number of attempts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUseAttempt,\n      disabled: attemptsLeft === 0,\n      children: \"Use Attempt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGainAttempts,\n      children: \"Gain Attempts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GiveAttempts, \"/38N86WKdrWLoF01pkAdsFKuqVQ=\");\n\n_c = GiveAttempts;\n\nvar _c;\n\n$RefreshReg$(_c, \"GiveAttempts\");","map":{"version":3,"sources":["C:/Users/thiag/first_project/tasks/src/form-components/GiveAttempts.tsx"],"names":["React","useState","GiveAttempts","attemptsLeft","setAttemptsLeft","requestedAttempts","setRequestedAttempts","handleUseAttempt","handleGainAttempts","parsedAttempts","parseInt","isNaN","handleChange","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,SAASC,YAAT,GAAqC;AAAA;;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAS,CAAT,CAAhD;AACA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CL,QAAQ,CAAS,EAAT,CAA1D;;AACA,QAAMM,gBAAgB,GAAG,MAAM;AAC3B,QAAIJ,YAAY,GAAG,CAAnB,EAAsB;AAClBC,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACH;AACJ,GAJD;;AAKA,QAAMK,kBAAkB,GAAG,MAAM;AAC7B,UAAMC,cAAc,GAAGC,QAAQ,CAACL,iBAAD,CAA/B;;AACA,QAAI,CAACM,KAAK,CAACF,cAAD,CAAN,IAA0BA,cAAc,GAAG,CAA/C,EAAkD;AAC9CL,MAAAA,eAAe,CAACD,YAAY,GAAGM,cAAhB,CAAf;AACAH,MAAAA,oBAAoB,CAAC,EAAD,CAApB;AACH;AACJ,GAND;;AAOA,QAAMM,YAAY,GAAIC,KAAD,IAAgD;AACjEP,IAAAA,oBAAoB,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,oCAAmBZ,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEE,iBAFX;AAGI,MAAA,QAAQ,EAAEO,YAHd;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI;AAAQ,MAAA,OAAO,EAAEL,gBAAjB;AAAmC,MAAA,QAAQ,EAAEJ,YAAY,KAAK,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI;AAAQ,MAAA,OAAO,EAAEK,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAlCeN,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport function GiveAttempts(): JSX.Element {\r\n    const [attemptsLeft, setAttemptsLeft] = useState<number>(3);\r\n    const [requestedAttempts, setRequestedAttempts] = useState<string>(\"\");\r\n    const handleUseAttempt = () => {\r\n        if (attemptsLeft > 0) {\r\n            setAttemptsLeft(attemptsLeft - 1);\r\n        }\r\n    };\r\n    const handleGainAttempts = () => {\r\n        const parsedAttempts = parseInt(requestedAttempts);\r\n        if (!isNaN(parsedAttempts) && parsedAttempts > 0) {\r\n            setAttemptsLeft(attemptsLeft + parsedAttempts);\r\n            setRequestedAttempts(\"\");\r\n        }\r\n    };\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRequestedAttempts(event.target.value);\r\n    };\r\n    return (\r\n        <div>\r\n            <h3>Give Attempts</h3>\r\n            <p>Attempts Left: {attemptsLeft}</p>\r\n            <input\r\n                type=\"number\"\r\n                value={requestedAttempts}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter number of attempts\"\r\n            />\r\n            <button onClick={handleUseAttempt} disabled={attemptsLeft === 0}>\r\n                Use Attempt\r\n            </button>\r\n            <button onClick={handleGainAttempts}>Gain Attempts</button>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}