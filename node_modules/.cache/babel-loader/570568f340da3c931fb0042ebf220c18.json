{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\first_project\\\\tasks\\\\src\\\\form-components\\\\ChangeColor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"red\", \"blue\", \"green\", \"orange\", \"purple\", \"yellow\", \"pink\", \"brown\"];\nexport function ChangeColor() {\n  _s();\n\n  const [selectedColor, setSelectedColor] = useState(COLORS[0]);\n\n  const handleColorChange = color => {\n    setSelectedColor(color);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Change Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: COLORS.map(color => /*#__PURE__*/_jsxDEV(Form.Check, {\n        inline: true,\n        type: \"radio\",\n        id: `radio-${color}`,\n        label: color,\n        checked: selectedColor === color,\n        onChange: () => handleColorChange(color)\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"colored-box\",\n      style: {\n        width: \"100px\",\n        height: \"50px\",\n        backgroundColor: selectedColor,\n        marginTop: \"10px\"\n      },\n      children: [\"on \", selectedColor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangeColor, \"KGea4uhB9QKWSMY6Kl/QtcwWUwU=\");\n\n_c = ChangeColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeColor\");","map":{"version":3,"sources":["C:/Users/thiag/first_project/tasks/src/form-components/ChangeColor.tsx"],"names":["React","useState","Form","COLORS","ChangeColor","selectedColor","setSelectedColor","handleColorChange","color","map","width","height","backgroundColor","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACA,MAAMC,MAAM,GAAG,CACX,KADW,EAEX,MAFW,EAGX,OAHW,EAIX,QAJW,EAKX,QALW,EAMX,QANW,EAOX,MAPW,EAQX,OARW,CAAf;AAWA,OAAO,SAASC,WAAT,GAAoC;AAAA;;AACvC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAASE,MAAM,CAAC,CAAD,CAAf,CAAlD;;AACA,QAAMI,iBAAiB,GAAIC,KAAD,IAAmB;AACzCF,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKL,MAAM,CAACM,GAAP,CAAYD,KAAD,iBACR,QAAC,IAAD,CAAM,KAAN;AACI,QAAA,MAAM,MADV;AAEI,QAAA,IAAI,EAAC,OAFT;AAII,QAAA,EAAE,EAAG,SAAQA,KAAM,EAJvB;AAKI,QAAA,KAAK,EAAEA,KALX;AAMI,QAAA,OAAO,EAAEH,aAAa,KAAKG,KAN/B;AAOI,QAAA,QAAQ,EAAE,MAAMD,iBAAiB,CAACC,KAAD;AAPrC,SAGSA,KAHT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAeI;AACI,qBAAY,aADhB;AAEI,MAAA,KAAK,EAAE;AACHE,QAAAA,KAAK,EAAE,OADJ;AAEHC,QAAAA,MAAM,EAAE,MAFL;AAGHC,QAAAA,eAAe,EAAEP,aAHd;AAIHQ,QAAAA,SAAS,EAAE;AAJR,OAFX;AAAA,wBASQR,aATR;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAlCeD,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nconst COLORS = [\r\n    \"red\",\r\n    \"blue\",\r\n    \"green\",\r\n    \"orange\",\r\n    \"purple\",\r\n    \"yellow\",\r\n    \"pink\",\r\n    \"brown\"\r\n];\r\n\r\nexport function ChangeColor(): JSX.Element {\r\n    const [selectedColor, setSelectedColor] = useState<string>(COLORS[0]);\r\n    const handleColorChange = (color: string) => {\r\n        setSelectedColor(color);\r\n    };\r\n    return (\r\n        <div>\r\n            <h3>Change Color</h3>\r\n            <div>\r\n                {COLORS.map((color) => (\r\n                    <Form.Check\r\n                        inline\r\n                        type=\"radio\"\r\n                        key={color}\r\n                        id={`radio-${color}`}\r\n                        label={color}\r\n                        checked={selectedColor === color}\r\n                        onChange={() => handleColorChange(color)}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div\r\n                data-testid=\"colored-box\"\r\n                style={{\r\n                    width: \"100px\",\r\n                    height: \"50px\",\r\n                    backgroundColor: selectedColor,\r\n                    marginTop: \"10px\"\r\n                }}\r\n            >\r\n                on {selectedColor}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}