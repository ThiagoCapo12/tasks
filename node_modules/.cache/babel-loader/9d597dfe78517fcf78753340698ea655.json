{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\first_project\\\\tasks\\\\src\\\\form-components\\\\EditMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditMode() {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [userName, setUserName] = useState(\"Your Name\");\n  const [isStudent, setIsStudent] = useState(true);\n\n  const handleToggleEditMode = () => {\n    setEditMode(!editMode);\n  };\n\n  const handleNameChange = event => {\n    setUserName(event.target.value);\n  };\n\n  const handleStudentChange = () => {\n    setIsStudent(!isStudent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: editMode,\n      onChange: handleToggleEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userName,\n        onChange: handleNameChange,\n        placeholder: \"Enter your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isStudent,\n          onChange: handleStudentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), \"Student\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [userName, \" is\", \" \", isStudent ? \"a student\" : \"not a student\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditMode, \"fO5AkCIff1z7ZYBtuazP3EBbVVw=\");\n\n_c = EditMode;\n\nfunction Switch(props) {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"form-switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.checked,\n      onChange: props.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"slider round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Switch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditMode\");\n$RefreshReg$(_c2, \"Switch\");","map":{"version":3,"sources":["C:/Users/thiag/first_project/tasks/src/form-components/EditMode.tsx"],"names":["React","useState","EditMode","editMode","setEditMode","userName","setUserName","isStudent","setIsStudent","handleToggleEditMode","handleNameChange","event","target","value","handleStudentChange","Switch","props","checked","onChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,SAASC,QAAT,GAAiC;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAS,WAAT,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAU,IAAV,CAA1C;;AAEA,QAAMQ,oBAAoB,GAAG,MAAM;AAC/BL,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAGA,QAAMO,gBAAgB,GAAIC,KAAD,IAAgD;AACrEL,IAAAA,WAAW,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACH,GAFD;;AAGA,QAAMC,mBAAmB,GAAG,MAAM;AAC9BN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEJ,QAAjB;AAA2B,MAAA,QAAQ,EAAEM;AAArC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKN,QAAQ,gBACL;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEE,QAFX;AAGI,QAAA,QAAQ,EAAEK,gBAHd;AAII,QAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,OAAO,EAAEH,SAFb;AAGI,UAAA,QAAQ,EAAEO;AAHd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAkBL;AAAA,6BACI;AAAA,mBACKT,QADL,SACkB,GADlB,EAEKE,SAAS,GAAG,WAAH,GAAiB,eAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA7CeL,Q;;KAAAA,Q;;AA8ChB,SAASa,MAAT,CAAgBC,KAAhB,EAGgB;AACZ,sBACI;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,OAAO,EAAEA,KAAK,CAACC,OAFnB;AAGI,MAAA,QAAQ,EAAED,KAAK,CAACE;AAHpB;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;MAdQH,M","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport function EditMode(): JSX.Element {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [userName, setUserName] = useState<string>(\"Your Name\");\r\n    const [isStudent, setIsStudent] = useState<boolean>(true);\r\n\r\n    const handleToggleEditMode = () => {\r\n        setEditMode(!editMode);\r\n    };\r\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserName(event.target.value);\r\n    };\r\n    const handleStudentChange = () => {\r\n        setIsStudent(!isStudent);\r\n    };\r\n    return (\r\n        <div>\r\n            <h3>Edit Mode</h3>\r\n            <Switch checked={editMode} onChange={handleToggleEditMode} />\r\n            {editMode ? (\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userName}\r\n                        onChange={handleNameChange}\r\n                        placeholder=\"Enter your name\"\r\n                    />\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={isStudent}\r\n                            onChange={handleStudentChange}\r\n                        />\r\n                        Student\r\n                    </label>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <p>\r\n                        {userName} is{\" \"}\r\n                        {isStudent ? \"a student\" : \"not a student\"}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nfunction Switch(props: {\r\n    checked: boolean;\r\n    onChange: () => void;\r\n}): JSX.Element {\r\n    return (\r\n        <label className=\"form-switch\">\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={props.checked}\r\n                onChange={props.onChange}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n        </label>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}