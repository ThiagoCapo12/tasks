{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\first_project\\\\tasks\\\\src\\\\components\\\\CycleHoliday.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable indent */\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CycleHoliday() {\n  _s();\n\n  const [currentHoliday, setCurrentHoliday] = useState(\"Dragon Boat Festival\");\n\n  const advanceAlphabetically = () => {\n    setCurrentHoliday(getNextHolidayAlphabetically(currentHoliday));\n  };\n\n  const advanceByYear = () => {\n    setCurrentHoliday(getNextHolidayByYear(currentHoliday));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cycle Holidays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Holiday: \", holidayEmojis[currentHoliday]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: advanceAlphabetically,\n      children: \"Advance by Alphabet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: advanceByYear,\n      children: \"Advance by Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CycleHoliday, \"BJIeZFvhz0d13tj5bXmnlrWHr1c=\");\n\n_c = CycleHoliday;\nconst holidayEmojis = {\n  \"Dragon Boat Festival\": \"🎏\",\n  Halloween: \"🎃\",\n  Diwali: \"🪔\",\n  Christmas: \"🎄\",\n  Thanksgiving: \"🦃\"\n};\nconst holidaysInOrder = [\"Diwali\", \"Dragon Boat Festival\", \"Halloween\", \"Thanksgiving\", \"Christmas\"];\n\nfunction getNextHolidayAlphabetically(current) {\n  const currentIndex = holidaysInOrder.indexOf(current);\n  const nextIndex = (currentIndex + 1) % holidaysInOrder.length;\n  return holidaysInOrder[nextIndex];\n}\n\nfunction getNextHolidayByYear(current) {\n  switch (current) {\n    case \"Dragon Boat Festival\":\n      return \"Diwali\";\n\n    case \"Diwali\":\n      return \"Halloween\";\n\n    case \"Halloween\":\n      return \"Thanksgiving\";\n\n    case \"Thanksgiving\":\n      return \"Christmas\";\n\n    case \"Christmas\":\n      return \"Dragon Boat Festival\";\n\n    default:\n      return current;\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CycleHoliday\");","map":{"version":3,"sources":["C:/Users/thiag/first_project/tasks/src/components/CycleHoliday.tsx"],"names":["React","useState","Button","CycleHoliday","currentHoliday","setCurrentHoliday","advanceAlphabetically","getNextHolidayAlphabetically","advanceByYear","getNextHolidayByYear","holidayEmojis","Halloween","Diwali","Christmas","Thanksgiving","holidaysInOrder","current","currentIndex","indexOf","nextIndex","length"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,OAAO,SAASC,YAAT,GAAqC;AAAA;;AACxC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAChD,sBADgD,CAApD;;AAIA,QAAMK,qBAAqB,GAAG,MAAM;AAChCD,IAAAA,iBAAiB,CAACE,4BAA4B,CAACH,cAAD,CAA7B,CAAjB;AACH,GAFD;;AAIA,QAAMI,aAAa,GAAG,MAAM;AACxBH,IAAAA,iBAAiB,CAACI,oBAAoB,CAACL,cAAD,CAArB,CAAjB;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BAAaM,aAAa,CAACN,cAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArBeL,Y;;KAAAA,Y;AA6BhB,MAAMO,aAAsC,GAAG;AAC3C,0BAAwB,IADmB;AAE3CC,EAAAA,SAAS,EAAE,IAFgC;AAG3CC,EAAAA,MAAM,EAAE,IAHmC;AAI3CC,EAAAA,SAAS,EAAE,IAJgC;AAK3CC,EAAAA,YAAY,EAAE;AAL6B,CAA/C;AAQA,MAAMC,eAA0B,GAAG,CAC/B,QAD+B,EAE/B,sBAF+B,EAG/B,WAH+B,EAI/B,cAJ+B,EAK/B,WAL+B,CAAnC;;AAQA,SAASR,4BAAT,CAAsCS,OAAtC,EAAiE;AAC7D,QAAMC,YAAY,GAAGF,eAAe,CAACG,OAAhB,CAAwBF,OAAxB,CAArB;AACA,QAAMG,SAAS,GAAG,CAACF,YAAY,GAAG,CAAhB,IAAqBF,eAAe,CAACK,MAAvD;AACA,SAAOL,eAAe,CAACI,SAAD,CAAtB;AACH;;AACD,SAASV,oBAAT,CAA8BO,OAA9B,EAAyD;AACrD,UAAQA,OAAR;AACI,SAAK,sBAAL;AACI,aAAO,QAAP;;AACJ,SAAK,QAAL;AACI,aAAO,WAAP;;AACJ,SAAK,WAAL;AACI,aAAO,cAAP;;AACJ,SAAK,cAAL;AACI,aAAO,WAAP;;AACJ,SAAK,WAAL;AACI,aAAO,sBAAP;;AACJ;AACI,aAAOA,OAAP;AAZR;AAcH","sourcesContent":["/* eslint-disable indent */\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport function CycleHoliday(): JSX.Element {\r\n    const [currentHoliday, setCurrentHoliday] = useState<Holiday>(\r\n        \"Dragon Boat Festival\"\r\n    );\r\n\r\n    const advanceAlphabetically = () => {\r\n        setCurrentHoliday(getNextHolidayAlphabetically(currentHoliday));\r\n    };\r\n\r\n    const advanceByYear = () => {\r\n        setCurrentHoliday(getNextHolidayByYear(currentHoliday));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Cycle Holidays</h1>\r\n            <p>Holiday: {holidayEmojis[currentHoliday]}</p>\r\n            <Button onClick={advanceAlphabetically}>Advance by Alphabet</Button>\r\n            <Button onClick={advanceByYear}>Advance by Year</Button>\r\n        </div>\r\n    );\r\n}\r\ntype Holiday =\r\n    | \"Dragon Boat Festival\"\r\n    | \"Halloween\"\r\n    | \"Diwali\"\r\n    | \"Christmas\"\r\n    | \"Thanksgiving\";\r\n\r\nconst holidayEmojis: Record<Holiday, string> = {\r\n    \"Dragon Boat Festival\": \"🎏\",\r\n    Halloween: \"🎃\",\r\n    Diwali: \"🪔\",\r\n    Christmas: \"🎄\",\r\n    Thanksgiving: \"🦃\"\r\n};\r\n\r\nconst holidaysInOrder: Holiday[] = [\r\n    \"Diwali\",\r\n    \"Dragon Boat Festival\",\r\n    \"Halloween\",\r\n    \"Thanksgiving\",\r\n    \"Christmas\"\r\n];\r\n\r\nfunction getNextHolidayAlphabetically(current: Holiday): Holiday {\r\n    const currentIndex = holidaysInOrder.indexOf(current);\r\n    const nextIndex = (currentIndex + 1) % holidaysInOrder.length;\r\n    return holidaysInOrder[nextIndex];\r\n}\r\nfunction getNextHolidayByYear(current: Holiday): Holiday {\r\n    switch (current) {\r\n        case \"Dragon Boat Festival\":\r\n            return \"Diwali\";\r\n        case \"Diwali\":\r\n            return \"Halloween\";\r\n        case \"Halloween\":\r\n            return \"Thanksgiving\";\r\n        case \"Thanksgiving\":\r\n            return \"Christmas\";\r\n        case \"Christmas\":\r\n            return \"Dragon Boat Festival\";\r\n        default:\r\n            return current;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}