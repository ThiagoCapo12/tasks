{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\first_project\\\\tasks\\\\src\\\\components\\\\ChangeType.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChangeType() {\n  _s();\n\n  const [questionType, setQuestionType] = useState(\"short_answer_question\");\n\n  const handleChangeType = () => {\n    setQuestionType(questionType === \"short_answer_question\" ? \"multiple_choice_question\" : \"short_answer_question\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Question Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The type is:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), questionType === \"multiple_choice_question\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Multiple Choice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Short Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleChangeType,\n      children: \"Change Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangeType, \"II+ezCf15Xh8LQox7ILi2hzlAeU=\");\n\n_c = ChangeType;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeType\");","map":{"version":3,"sources":["C:/Users/thiag/first_project/tasks/src/components/ChangeType.tsx"],"names":["React","useState","Button","ChangeType","questionType","setQuestionType","handleChangeType"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAGA,OAAO,SAASC,UAAT,GAAmC;AAAA;;AACtC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAC5C,uBAD4C,CAAhD;;AAGA,QAAMK,gBAAgB,GAAG,MAAM;AAC3BD,IAAAA,eAAe,CACXD,YAAY,KAAK,uBAAjB,GACM,0BADN,GAEM,uBAHK,CAAf;AAKH,GAND;;AAOA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKA,YAAY,KAAK,0BAAjB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANR,eAQI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAvBeH,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { QuestionType } from \"../interfaces/question\";\r\n\r\nexport function ChangeType(): JSX.Element {\r\n    const [questionType, setQuestionType] = useState<QuestionType>(\r\n        \"short_answer_question\"\r\n    );\r\n    const handleChangeType = () => {\r\n        setQuestionType(\r\n            questionType === \"short_answer_question\"\r\n                ? \"multiple_choice_question\"\r\n                : \"short_answer_question\"\r\n        );\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>Quiz Question Editor</h1>\r\n            <p>The type is:</p>\r\n            {questionType === \"multiple_choice_question\" ? (\r\n                <p>Multiple Choice</p>\r\n            ) : (\r\n                <p>Short Answer</p>\r\n            )}\r\n            <Button onClick={handleChangeType}>Change Type</Button>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}